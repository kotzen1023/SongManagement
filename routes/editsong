const mysql = require('mysql2');
var express = require('express');
var router = express.Router();

const connection = mysql.createConnection({
	host     : 'localhost',
	user     : 'song',
	password : 'password',
	database : 'song'
});

/* GET editsong listing. */
router.get('/', function(req, res, next) {
    console.log("editsong get:"+req.query.SongNum);
    
    if (req.query.SongNum != undefined) {
        var sql_str = "SELECT Id, SongNum, Name, SingerName, SingerId, SongLanguageId, SongTypeId, Track, FirstSpell, AllSpell, NameLength, Hits, Format, ServerState, Image, SavePath, DownPath, Version, DownUrl1, DownUrl2, DownUrl3, BackDownUrl, FileMd5, ShowHidden, Sort, AddTime, UpdateTime, DownCount, VersionName FROM tb_song WHERE SongNum = "+ req.query.SongNum +";";

        console.log("sql_str = "+sql_str);

        connection.query(sql_str, function(error, results, fields) {
        // If there is an issue with the query, output the error
            if (error) throw error;
        
            //console.log("record found: " + JSON.stringify(results));

            //res.send(JSON.stringify(results));
            res.render('editsong', {
                Id: results[0].Id,
                SongNum: results[0].SongNum,
                Name: results[0].Name,
                SingerName: results[0].SingerName,
                SingerId: results[0].SingerId,
                SongLanguageId: results[0].SongLanguageId,
                SongTypeId: results[0].SongTypeId,
                Track: results[0].Track,
                FirstSpell: results[0].FirstSpell,
                AllSpell: results[0].AllSpell,
                NameLength: results[0].NameLength,
                Hits: results[0].Hits,
                Format: results[0].Format,
                ServerState: results[0].ServerState,
                Image: results[0].Image,
                SavePath: results[0].SavePath,
                DownPath: results[0].DownPath,
                Version: results[0].Version,
                DownUrl1: results[0].DownUrl1,
                DownUrl2: results[0].DownUrl2,
                DownUrl3: results[0].DownUrl3,
                BackDownUrl: results[0].BackDownUrl,
                FileMd5: results[0].FileMd5,
                ShowHidden: results[0].ShowHidden,
                Sort: results[0].Sort,
                AddTime: results[0].AddTime,
                UpdateTime: results[0].UpdateTime,
                DownCount: results[0].DownCount,
                VersionName: results[0].VersionName,
            });
            res.end();
        });
        
    } else {
        res.send('No Data!');
    }
    
});

router.post('/change', function(request, response, next) {
    
    let Id = request.body.inputId;
    let SongNum = request.body.inputSongNum;
	let Name = request.body.inputName;
    let SingerName = request.body.inputSingerName;
    let SingerId = request.body.inputSingerId;
    let SongLanguageId = request.body.inputSongLanguageId;
    let SongTypeId = request.body.inputSongTypeId;
    let Track = request.body.inputTrack;
    let FirstSpell = request.body.inputFirstSpell;
    let AllSpell = request.body.inputAllSpell;
    let NameLength = request.body.inputNameLength;
    let Hits = request.body.inputHits;
    let Format = request.body.inputFormat;
    let ServerState = request.body.inputServerState;
    let Image = request.body.inputImage;
    let SavePath = request.body.inputSavePath;
    let DownPath = request.body.inputDownPath;
    let Version = request.body.inputVersion;
    let DownUrl1 = request.body.inputDownUrl1;
    let DownUrl2 = request.body.inputDownUrl2;
    let DownUrl3 = request.body.inputDownUrl3;
    let BackDownUrl = request.body.inputBackDownUrl;
    let FileMd5 = request.body.inputFileMd5;
    let ShowHidden = request.body.inputShowHidden;
    let Sort = request.body.inputSort;
    let AddTime = request.body.inputAddTime;
    let UpdateTime = request.body.inputUpdateTime;
    let DownCount = request.body.inputDownCount;
    let VersionName = request.body.inputVersionName;

    console.log("Id = "+Id);
    console.log("SongNum = "+SongNum);
    console.log("Name = "+Name);
    console.log("SingerName = "+SingerName);
    console.log("SingerId = "+SingerId);
    console.log("SongLanguageId = "+SongLanguageId);
    console.log("SongTypeId = "+SongTypeId);
    console.log("Track = "+Track);
    console.log("FirstSpell = "+FirstSpell);
    console.log("AllSpell = "+AllSpell);
    console.log("NameLength = "+NameLength);
    console.log("Hits = "+Hits);
    console.log("Format = "+Format);
    console.log("ServerState = "+ServerState);
    console.log("Image = "+Image);
    console.log("SavePath = "+SavePath);
    console.log("DownPath = "+DownPath);
    console.log("Version = "+Version);
    console.log("DownUrl1 = "+DownUrl1);
    console.log("DownUrl2 = "+DownUrl2);
    console.log("DownUrl3 = "+DownUrl3);
    console.log("BackDownUrl = "+BackDownUrl);
    console.log("FileMd5 = "+FileMd5);
    console.log("ShowHidden = "+ShowHidden);
    console.log("Sort = "+Sort);
    console.log("AddTime = "+AddTime);
    console.log("UpdateTime = "+UpdateTime);
    console.log("DownCount = "+DownCount);
    console.log("VersionName = "+VersionName);
    
    //let formatData = request.body;

    //console.log("SongNum = "+formatData['SongNum']);
    
    var sql_str = "Update tb_song SET SongNum = '"+SongNum+"', Name = '"+Name+"', SingerName = '"+SingerName+"', SingerId = '"+SingerId+"', SongLanguageId = '"+SongLanguageId+"', SongTypeId = '"+SongTypeId+"', Track = '"+Track+"', FirstSpell = '"+FirstSpell+"', AllSpell = '"+AllSpell+"', NameLength = '"+NameLength+"', Hits = '"+Hits+"', Format = '"+Format+"', ServerState = '"+ServerState+"', Image = '"+Image+"', SavePath = '"+SavePath+"', DownPath = '"+DownPath+"', Version = '"+Version+"', DownUrl1 = '"+DownUrl1+"', DownUrl2 = '"+DownUrl2+"', DownUrl3 = '"+DownUrl3+"', BackDownUrl = '"+BackDownUrl+"', FileMd5 = '"+FileMd5+"', ShowHidden = '"+ShowHidden+"', Sort = '"+Sort+"', AddTime = '"+AddTime+"', UpdateTime = '"+UpdateTime+"', DownCount = '"+DownCount+"', VersionName = '"+VersionName+"' WHERE Id = "+ Id +";";

    console.log("sql_str = "+sql_str);

    connection.query(sql_str, function(error, results, fields) {
        // If there is an issue with the query, output the error
        if (error) throw error;
        
        //let data = JSON.stringify(results);
        
        console.log("results.affectedRows  = "+results.affectedRows );
        if (results.affectedRows  > 0) {
            response.redirect('/');
        } else {
            response.send('Update song failed!');
        }
        //response.send(JSON.stringify(results));
        //response.redirect('/editsong');
        //response.render('editsong', { Name: results[0].Name });
        //console.log("Number of records inserted: " + JSON.stringify(results));
        response.end();
    });
    
    
    
    
});

module.exports = router;